// Generated from ./Alf.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class AlfLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly WS = 5;
	public static readonly TAB = 6;
	public static readonly NEWLINE = 7;
	public static readonly ADD = 8;
	public static readonly SUB = 9;
	public static readonly MUL = 10;
	public static readonly DIV = 11;
	public static readonly REM = 12;
	public static readonly INT = 13;
	public static readonly FLOAT = 14;
	public static readonly STRING = 15;
	public static readonly LP = 16;
	public static readonly RP = 17;
	public static readonly EQ = 18;
	public static readonly SEMICOLON = 19;
	public static readonly GREATER = 20;
	public static readonly LESS = 21;
	public static readonly EQUAL = 22;
	public static readonly GREATER_EQUAL = 23;
	public static readonly LESS_EQUAL = 24;
	public static readonly ARRAY_NMBER = 25;
	public static readonly ARRAY_NR = 26;
	public static readonly INT_NUMBER = 27;
	public static readonly FLOAT_NUMBER = 28;
	public static readonly STRING_TEXT = 29;
	public static readonly BOOL = 30;
	public static readonly BOOLEAN = 31;
	public static readonly DECLARE = 32;
	public static readonly CLASS = 33;
	public static readonly END = 34;
	public static readonly ARRAY = 35;
	public static readonly PROPRIETY = 36;
	public static readonly FUCTION = 37;
	public static readonly BEGIN = 38;
	public static readonly FOR = 39;
	public static readonly FROM = 40;
	public static readonly TO = 41;
	public static readonly START = 42;
	public static readonly FINISH = 43;
	public static readonly IN = 44;
	public static readonly DIFFERENT = 45;
	public static readonly WHILE = 46;
	public static readonly IF = 47;
	public static readonly ELSE = 48;
	public static readonly DO = 49;
	public static readonly REPEAT = 50;
	public static readonly EXEC = 51;
	public static readonly EMPTY = 52;
	public static readonly VIRGULA = 53;
	public static readonly COMENTARY = 54;
	public static readonly CLASS_VARIABLE = 55;
	public static readonly VARIABLE = 56;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "WS", "TAB", "NEWLINE", "ADD", "SUB", 
		"MUL", "DIV", "REM", "INT", "FLOAT", "STRING", "LP", "RP", "EQ", "SEMICOLON", 
		"GREATER", "LESS", "EQUAL", "GREATER_EQUAL", "LESS_EQUAL", "ARRAY_NMBER", 
		"ARRAY_NR", "INT_NUMBER", "FLOAT_NUMBER", "STRING_TEXT", "BOOL", "BOOLEAN", 
		"DECLARE", "CLASS", "END", "ARRAY", "PROPRIETY", "FUCTION", "BEGIN", "FOR", 
		"FROM", "TO", "START", "FINISH", "IN", "DIFFERENT", "WHILE", "IF", "ELSE", 
		"DO", "REPEAT", "EXEC", "EMPTY", "VIRGULA", "COMENTARY", "CLASS_VARIABLE", 
		"VARIABLE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'['", "']'", "':'", "'=>'", undefined, undefined, undefined, 
		"'+'", "'-'", "'*'", "'/'", "'%'", "'integer'", "'float'", "'string'", 
		"'('", "')'", undefined, "';'", "'>'", "'<'", undefined, "'>='", "'<='", 
		undefined, undefined, undefined, undefined, undefined, undefined, "'boolean'", 
		"'declare'", "'class'", "'end'", "'array'", "'local'", "'function'", "'begin'", 
		"'for'", "'from'", "'to'", "'start'", "'finish'", "'in'", "'!='", "'while'", 
		"'if'", "'else'", "'DO'", "'repeat'", "'exec'", "'empty'", "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "WS", "TAB", "NEWLINE", 
		"ADD", "SUB", "MUL", "DIV", "REM", "INT", "FLOAT", "STRING", "LP", "RP", 
		"EQ", "SEMICOLON", "GREATER", "LESS", "EQUAL", "GREATER_EQUAL", "LESS_EQUAL", 
		"ARRAY_NMBER", "ARRAY_NR", "INT_NUMBER", "FLOAT_NUMBER", "STRING_TEXT", 
		"BOOL", "BOOLEAN", "DECLARE", "CLASS", "END", "ARRAY", "PROPRIETY", "FUCTION", 
		"BEGIN", "FOR", "FROM", "TO", "START", "FINISH", "IN", "DIFFERENT", "WHILE", 
		"IF", "ELSE", "DO", "REPEAT", "EXEC", "EMPTY", "VIRGULA", "COMENTARY", 
		"CLASS_VARIABLE", "VARIABLE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(AlfLexer._LITERAL_NAMES, AlfLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return AlfLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(AlfLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Alf.g4"; }

	// @Override
	public get ruleNames(): string[] { return AlfLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return AlfLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return AlfLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return AlfLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02:\u0191\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x06\b\x86\n\b\r\b\x0E\b\x87" +
		"\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03" +
		"\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03" +
		"\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x06\x1A\xC1" +
		"\n\x1A\r\x1A\x0E\x1A\xC2\x03\x1A\x03\x1A\x06\x1A\xC7\n\x1A\r\x1A\x0E\x1A" +
		"\xC8\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x06\x1B\xCF\n\x1B\r\x1B\x0E\x1B\xD0" +
		"\x03\x1B\x03\x1B\x03\x1C\x06\x1C\xD6\n\x1C\r\x1C\x0E\x1C\xD7\x03\x1D\x06" +
		"\x1D\xDB\n\x1D\r\x1D\x0E\x1D\xDC\x03\x1D\x03\x1D\x06\x1D\xE1\n\x1D\r\x1D" +
		"\x0E\x1D\xE2\x03\x1E\x03\x1E\x07\x1E\xE7\n\x1E\f\x1E\x0E\x1E\xEA\v\x1E" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x05\x1F\xF7\n\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03 " +
		"\x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"" +
		"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03$\x03%\x03" +
		"%\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03" +
		"\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03" +
		")\x03)\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03" +
		",\x03,\x03,\x03,\x03-\x03-\x03-\x03.\x03.\x03.\x03/\x03/\x03/\x03/\x03" +
		"/\x03/\x030\x030\x030\x031\x031\x031\x031\x031\x032\x032\x032\x033\x03" +
		"3\x033\x033\x033\x033\x033\x034\x034\x034\x034\x034\x035\x035\x035\x03" +
		"5\x035\x035\x036\x036\x037\x037\x037\x037\x067\u0176\n7\r7\x0E7\u0177" +
		"\x037\x037\x037\x037\x037\x038\x068\u0180\n8\r8\x0E8\u0181\x038\x038\x06" +
		"8\u0186\n8\r8\x0E8\u0187\x039\x059\u018B\n9\x039\x069\u018E\n9\r9\x0E" +
		"9\u018F\x02\x02\x02:\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02" +
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02" +
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'" +
		"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C" +
		"7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02" +
		"&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a" +
		"\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:\x03\x02\b\x03\x02" +
		"\v\v\x04\x02\f\f\x0F\x0F\x03\x022;\x06\x02\"\"2;C\\c|\x05\x022;C\\c|\x06" +
		"\x022;C\\aac|\x02\u019E\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x02" +
		"3\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02" +
		"\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02" +
		"\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03" +
		"\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02" +
		"\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02" +
		"U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02" +
		"\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02" +
		"\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03" +
		"\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02" +
		"\x02\x02q\x03\x02\x02\x02\x03s\x03\x02\x02\x02\x05u\x03\x02\x02\x02\x07" +
		"w\x03\x02\x02\x02\ty\x03\x02\x02\x02\v|\x03\x02\x02\x02\r\x80\x03\x02" +
		"\x02\x02\x0F\x85\x03\x02\x02\x02\x11\x8B\x03\x02\x02\x02\x13\x8D\x03\x02" +
		"\x02\x02\x15\x8F\x03\x02\x02\x02\x17\x91\x03\x02\x02\x02\x19\x93\x03\x02" +
		"\x02\x02\x1B\x95\x03\x02\x02\x02\x1D\x9D\x03\x02\x02\x02\x1F\xA3\x03\x02" +
		"\x02\x02!\xAA\x03\x02\x02\x02#\xAC\x03\x02\x02\x02%\xAE\x03\x02\x02\x02" +
		"\'\xB0\x03\x02\x02\x02)\xB2\x03\x02\x02\x02+\xB4\x03\x02\x02\x02-\xB6" +
		"\x03\x02\x02\x02/\xB8\x03\x02\x02\x021\xBB\x03\x02\x02\x023\xBE\x03\x02" +
		"\x02\x025\xCC\x03\x02\x02\x027\xD5\x03\x02\x02\x029\xDA\x03\x02\x02\x02" +
		";\xE4\x03\x02\x02\x02=\xF6\x03\x02\x02\x02?\xF8\x03\x02\x02\x02A\u0100" +
		"\x03\x02\x02\x02C\u0108\x03\x02\x02\x02E\u010E\x03\x02\x02\x02G\u0112" +
		"\x03\x02\x02\x02I\u0118\x03\x02\x02\x02K\u011E\x03\x02\x02\x02M\u0127" +
		"\x03\x02\x02\x02O\u012D\x03\x02\x02\x02Q\u0131\x03\x02\x02\x02S\u0136" +
		"\x03\x02\x02\x02U\u0139\x03\x02\x02\x02W\u013F\x03\x02\x02\x02Y\u0146" +
		"\x03\x02\x02\x02[\u0149\x03\x02\x02\x02]\u014C\x03\x02\x02\x02_\u0152" +
		"\x03\x02\x02\x02a\u0155\x03\x02\x02\x02c\u015A\x03\x02\x02\x02e\u015D" +
		"\x03\x02\x02\x02g\u0164\x03\x02\x02\x02i\u0169\x03\x02\x02\x02k\u016F" +
		"\x03\x02\x02\x02m\u0171\x03\x02\x02\x02o\u017F\x03\x02\x02\x02q\u018A" +
		"\x03\x02\x02\x02st\x07]\x02\x02t\x04\x03\x02\x02\x02uv\x07_\x02\x02v\x06" +
		"\x03\x02\x02\x02wx\x07<\x02\x02x\b\x03\x02\x02\x02yz\x07?\x02\x02z{\x07" +
		"@\x02\x02{\n\x03\x02\x02\x02|}\x07\"\x02\x02}~\x03\x02\x02\x02~\x7F\b" +
		"\x06\x02\x02\x7F\f\x03\x02\x02\x02\x80\x81\t\x02\x02\x02\x81\x82\x03\x02" +
		"\x02\x02\x82\x83\b\x07\x02\x02\x83\x0E\x03\x02\x02\x02\x84\x86\t\x03\x02" +
		"\x02\x85\x84\x03\x02\x02\x02\x86\x87\x03\x02\x02\x02\x87\x85\x03\x02\x02" +
		"\x02\x87\x88\x03\x02\x02\x02\x88\x89\x03\x02\x02\x02\x89\x8A\b\b\x02\x02" +
		"\x8A\x10\x03\x02\x02\x02\x8B\x8C\x07-\x02\x02\x8C\x12\x03\x02\x02\x02" +
		"\x8D\x8E\x07/\x02\x02\x8E\x14\x03\x02\x02\x02\x8F\x90\x07,\x02\x02\x90" +
		"\x16\x03\x02\x02\x02\x91\x92\x071\x02\x02\x92\x18\x03\x02\x02\x02\x93" +
		"\x94\x07\'\x02\x02\x94\x1A\x03\x02\x02\x02\x95\x96\x07k\x02\x02\x96\x97" +
		"\x07p\x02\x02\x97\x98\x07v\x02\x02\x98\x99\x07g\x02\x02\x99\x9A\x07i\x02" +
		"\x02\x9A\x9B\x07g\x02\x02\x9B\x9C\x07t\x02\x02\x9C\x1C\x03\x02\x02\x02" +
		"\x9D\x9E\x07h\x02\x02\x9E\x9F\x07n\x02\x02\x9F\xA0\x07q\x02\x02\xA0\xA1" +
		"\x07c\x02\x02\xA1\xA2\x07v\x02\x02\xA2\x1E\x03\x02\x02\x02\xA3\xA4\x07" +
		"u\x02\x02\xA4\xA5\x07v\x02\x02\xA5\xA6\x07t\x02\x02\xA6\xA7\x07k\x02\x02" +
		"\xA7\xA8\x07p\x02\x02\xA8\xA9\x07i\x02\x02\xA9 \x03\x02\x02\x02\xAA\xAB" +
		"\x07*\x02\x02\xAB\"\x03\x02\x02\x02\xAC\xAD\x07+\x02\x02\xAD$\x03\x02" +
		"\x02\x02\xAE\xAF\x07?\x02\x02\xAF&\x03\x02\x02\x02\xB0\xB1\x07=\x02\x02" +
		"\xB1(\x03\x02\x02\x02\xB2\xB3\x07@\x02\x02\xB3*\x03\x02\x02\x02\xB4\xB5" +
		"\x07>\x02\x02\xB5,\x03\x02\x02\x02\xB6\xB7\x07?\x02\x02\xB7.\x03\x02\x02" +
		"\x02\xB8\xB9\x07@\x02\x02\xB9\xBA\x07?\x02\x02\xBA0\x03\x02\x02\x02\xBB" +
		"\xBC\x07>\x02\x02\xBC\xBD\x07?\x02\x02\xBD2\x03\x02\x02\x02\xBE\xC0\x07" +
		"]\x02\x02\xBF\xC1\t\x04\x02\x02\xC0\xBF\x03\x02\x02\x02\xC1\xC2\x03\x02" +
		"\x02\x02\xC2\xC0\x03\x02\x02\x02\xC2\xC3\x03\x02\x02\x02\xC3\xC4\x03\x02" +
		"\x02\x02\xC4\xC6\x07<\x02\x02\xC5\xC7\t\x04\x02\x02\xC6\xC5\x03\x02\x02" +
		"\x02\xC7\xC8\x03\x02\x02\x02\xC8\xC6\x03\x02\x02\x02\xC8\xC9\x03\x02\x02" +
		"\x02\xC9\xCA\x03\x02\x02\x02\xCA\xCB\x07_\x02\x02\xCB4\x03\x02\x02\x02" +
		"\xCC\xCE\x07]\x02\x02\xCD\xCF\t\x04\x02\x02\xCE\xCD\x03\x02\x02\x02\xCF" +
		"\xD0\x03\x02\x02\x02\xD0\xCE\x03\x02\x02\x02\xD0\xD1\x03\x02\x02\x02\xD1" +
		"\xD2\x03\x02\x02\x02\xD2\xD3\x07_\x02\x02\xD36\x03\x02\x02\x02\xD4\xD6" +
		"\t\x04\x02\x02\xD5\xD4\x03\x02\x02\x02\xD6\xD7\x03\x02\x02\x02\xD7\xD5" +
		"\x03\x02\x02\x02\xD7\xD8\x03\x02\x02\x02\xD88\x03\x02\x02\x02\xD9\xDB" +
		"\t\x04\x02\x02\xDA\xD9\x03\x02\x02\x02\xDB\xDC\x03\x02\x02\x02\xDC\xDA" +
		"\x03\x02\x02\x02\xDC\xDD\x03\x02\x02\x02\xDD\xDE\x03\x02\x02\x02\xDE\xE0" +
		"\x070\x02\x02\xDF\xE1\t\x04\x02\x02\xE0\xDF\x03\x02\x02\x02\xE1\xE2\x03" +
		"\x02\x02\x02\xE2\xE0\x03\x02\x02\x02\xE2\xE3\x03\x02\x02\x02\xE3:\x03" +
		"\x02\x02\x02\xE4\xE8\x07$\x02\x02\xE5\xE7\t\x05\x02\x02\xE6\xE5\x03\x02" +
		"\x02\x02\xE7\xEA\x03\x02\x02\x02\xE8\xE6\x03\x02\x02\x02\xE8\xE9\x03\x02" +
		"\x02\x02\xE9\xEB\x03\x02\x02\x02\xEA\xE8\x03\x02\x02\x02\xEB\xEC\x07$" +
		"\x02\x02\xEC<\x03\x02\x02\x02\xED\xEE\x07v\x02\x02\xEE\xEF\x07t\x02\x02" +
		"\xEF\xF0\x07w\x02\x02\xF0\xF7\x07g\x02\x02\xF1\xF2\x07h\x02\x02\xF2\xF3" +
		"\x07c\x02\x02\xF3\xF4\x07n\x02\x02\xF4\xF5\x07u\x02\x02\xF5\xF7\x07g\x02" +
		"\x02\xF6\xED\x03\x02\x02\x02\xF6\xF1\x03\x02\x02\x02\xF7>\x03\x02\x02" +
		"\x02\xF8\xF9\x07d\x02\x02\xF9\xFA\x07q\x02\x02\xFA\xFB\x07q\x02\x02\xFB" +
		"\xFC\x07n\x02\x02\xFC\xFD\x07g\x02\x02\xFD\xFE\x07c\x02\x02\xFE\xFF\x07" +
		"p\x02\x02\xFF@\x03\x02\x02\x02\u0100\u0101\x07f\x02\x02\u0101\u0102\x07" +
		"g\x02\x02\u0102\u0103\x07e\x02\x02\u0103\u0104\x07n\x02\x02\u0104\u0105" +
		"\x07c\x02\x02\u0105\u0106\x07t\x02\x02\u0106\u0107\x07g\x02\x02\u0107" +
		"B\x03\x02\x02\x02\u0108\u0109\x07e\x02\x02\u0109\u010A\x07n\x02\x02\u010A" +
		"\u010B\x07c\x02\x02\u010B\u010C\x07u\x02\x02\u010C\u010D\x07u\x02\x02" +
		"\u010DD\x03\x02\x02\x02\u010E\u010F\x07g\x02\x02\u010F\u0110\x07p\x02" +
		"\x02\u0110\u0111\x07f\x02\x02\u0111F\x03\x02\x02\x02\u0112\u0113\x07c" +
		"\x02\x02\u0113\u0114\x07t\x02\x02\u0114\u0115\x07t\x02\x02\u0115\u0116" +
		"\x07c\x02\x02\u0116\u0117\x07{\x02\x02\u0117H\x03\x02\x02\x02\u0118\u0119" +
		"\x07n\x02\x02\u0119\u011A\x07q\x02\x02\u011A\u011B\x07e\x02\x02\u011B" +
		"\u011C\x07c\x02\x02\u011C\u011D\x07n\x02\x02\u011DJ\x03\x02\x02\x02\u011E" +
		"\u011F\x07h\x02\x02\u011F\u0120\x07w\x02\x02\u0120\u0121\x07p\x02\x02" +
		"\u0121\u0122\x07e\x02\x02\u0122\u0123\x07v\x02\x02\u0123\u0124\x07k\x02" +
		"\x02\u0124\u0125\x07q\x02\x02\u0125\u0126\x07p\x02\x02\u0126L\x03\x02" +
		"\x02\x02\u0127\u0128\x07d\x02\x02\u0128\u0129\x07g\x02\x02\u0129\u012A" +
		"\x07i\x02\x02\u012A\u012B\x07k\x02\x02\u012B\u012C\x07p\x02\x02\u012C" +
		"N\x03\x02\x02\x02\u012D\u012E\x07h\x02\x02\u012E\u012F\x07q\x02\x02\u012F" +
		"\u0130\x07t\x02\x02\u0130P\x03\x02\x02\x02\u0131\u0132\x07h\x02\x02\u0132" +
		"\u0133\x07t\x02\x02\u0133\u0134\x07q\x02\x02\u0134\u0135\x07o\x02\x02" +
		"\u0135R\x03\x02\x02\x02\u0136\u0137\x07v\x02\x02\u0137\u0138\x07q\x02" +
		"\x02\u0138T\x03\x02\x02\x02\u0139\u013A\x07u\x02\x02\u013A\u013B\x07v" +
		"\x02\x02\u013B\u013C\x07c\x02\x02\u013C\u013D\x07t\x02\x02\u013D\u013E" +
		"\x07v\x02\x02\u013EV\x03\x02\x02\x02\u013F\u0140\x07h\x02\x02\u0140\u0141" +
		"\x07k\x02\x02\u0141\u0142\x07p\x02\x02\u0142\u0143\x07k\x02\x02\u0143" +
		"\u0144\x07u\x02\x02\u0144\u0145\x07j\x02\x02\u0145X\x03\x02\x02\x02\u0146" +
		"\u0147\x07k\x02\x02\u0147\u0148\x07p\x02\x02\u0148Z\x03\x02\x02\x02\u0149" +
		"\u014A\x07#\x02\x02\u014A\u014B\x07?\x02\x02\u014B\\\x03\x02\x02\x02\u014C" +
		"\u014D\x07y\x02\x02\u014D\u014E\x07j\x02\x02\u014E\u014F\x07k\x02\x02" +
		"\u014F\u0150\x07n\x02\x02\u0150\u0151\x07g\x02\x02\u0151^\x03\x02\x02" +
		"\x02\u0152\u0153\x07k\x02\x02\u0153\u0154\x07h\x02\x02\u0154`\x03\x02" +
		"\x02\x02\u0155\u0156\x07g\x02\x02\u0156\u0157\x07n\x02\x02\u0157\u0158" +
		"\x07u\x02\x02\u0158\u0159\x07g\x02\x02\u0159b\x03\x02\x02\x02\u015A\u015B" +
		"\x07F\x02\x02\u015B\u015C\x07Q\x02\x02\u015Cd\x03\x02\x02\x02\u015D\u015E" +
		"\x07t\x02\x02\u015E\u015F\x07g\x02\x02\u015F\u0160\x07r\x02\x02\u0160" +
		"\u0161\x07g\x02\x02\u0161\u0162\x07c\x02\x02\u0162\u0163\x07v\x02\x02" +
		"\u0163f\x03\x02\x02\x02\u0164\u0165\x07g\x02\x02\u0165\u0166\x07z\x02" +
		"\x02\u0166\u0167\x07g\x02\x02\u0167\u0168\x07e\x02\x02\u0168h\x03\x02" +
		"\x02\x02\u0169\u016A\x07g\x02\x02\u016A\u016B\x07o\x02\x02\u016B\u016C" +
		"\x07r\x02\x02\u016C\u016D\x07v\x02\x02\u016D\u016E\x07{\x02\x02\u016E" +
		"j\x03\x02\x02\x02\u016F\u0170\x07.\x02\x02\u0170l\x03\x02\x02\x02\u0171" +
		"\u0172\x071\x02\x02\u0172\u0173\x07,\x02\x02\u0173\u0175\x03\x02\x02\x02" +
		"\u0174\u0176\v\x02\x02\x02\u0175\u0174\x03\x02\x02\x02\u0176\u0177\x03" +
		"\x02\x02\x02\u0177\u0175\x03\x02\x02\x02\u0177\u0178\x03\x02\x02\x02\u0178" +
		"\u0179\x03\x02\x02\x02\u0179\u017A\x07,\x02\x02\u017A\u017B\x071\x02\x02" +
		"\u017B\u017C\x03\x02\x02\x02\u017C\u017D\b7\x02\x02\u017Dn\x03\x02\x02" +
		"\x02\u017E\u0180\t\x06\x02\x02\u017F\u017E\x03\x02\x02\x02\u0180\u0181" +
		"\x03\x02\x02\x02\u0181\u017F\x03\x02\x02\x02\u0181\u0182\x03\x02\x02\x02" +
		"\u0182\u0183\x03\x02\x02\x02\u0183\u0185\x070\x02\x02\u0184\u0186\t\x06" +
		"\x02\x02\u0185\u0184\x03\x02\x02\x02\u0186\u0187\x03\x02\x02\x02\u0187" +
		"\u0185\x03\x02\x02\x02\u0187\u0188\x03\x02\x02\x02\u0188p\x03\x02\x02" +
		"\x02\u0189\u018B\x07a\x02\x02\u018A\u0189\x03\x02\x02\x02\u018A\u018B" +
		"\x03\x02\x02\x02\u018B\u018D\x03\x02\x02\x02\u018C\u018E\t\x07\x02\x02" +
		"\u018D\u018C\x03\x02\x02\x02\u018E\u018F\x03\x02\x02\x02\u018F\u018D\x03" +
		"\x02\x02\x02\u018F\u0190\x03\x02\x02\x02\u0190r\x03\x02\x02\x02\x11\x02" +
		"\x87\xC2\xC8\xD0\xD7\xDC\xE2\xE8\xF6\u0177\u0181\u0187\u018A\u018F\x03" +
		"\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!AlfLexer.__ATN) {
			AlfLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(AlfLexer._serializedATN));
		}

		return AlfLexer.__ATN;
	}

}

